services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: network_config
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: Cisc0123
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5

  createbucket:
    image: minio/mc:RELEASE.2025-07-16T15-35-03Z
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 admin Cisc0123 &&
      mc mb -p local/network-config-backups || true &&
      echo 'bucket ok';
      "

  celery_worker:
    image: collinsctk/qytang-config-system-backend:1.0.3
    command: celery -A app.worker.app worker --loglevel=INFO --concurrency=8
    volumes:
      - ./license:/app/license
      - ./license/pyarmor.rkey:/app/pyarmor.rkey:ro
    environment:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@postgres:5432/network_config
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: admin
      S3_SECRET_KEY: Cisc0123
      S3_BUCKET: network-config-backups
    depends_on:
      - redis
      - postgres
      - minio
      - createbucket

  backup_scheduler:
    image: collinsctk/qytang-config-system-backend:1.0.3
    command: python -m app.schedulers.backup_scheduler
    volumes:
      - ./license:/app/license
      - ./license/pyarmor.rkey:/app/pyarmor.rkey:ro
    environment:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@postgres:5432/network_config
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      REDIS_URL: redis://redis:6379
      BACKUP_RETENTION_DAYS: "365"
    depends_on:
      - redis
      - postgres
      - minio
      - createbucket

  backend:
    image: collinsctk/qytang-config-system-backend:1.0.3
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./license:/app/license
      - ./license/pyarmor.rkey:/app/pyarmor.rkey:ro
    environment:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@postgres:5432/network_config
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: admin
      S3_SECRET_KEY: Cisc0123
      S3_BUCKET: network-config-backups
      BACKUP_RETENTION_DAYS: "365"
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - minio
      - createbucket

volumes:
  postgres_data:
  redis_data:
  minio_data:
